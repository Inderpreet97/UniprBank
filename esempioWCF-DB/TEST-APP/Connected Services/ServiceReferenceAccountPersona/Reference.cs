//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TEST_APP.ServiceReferenceAccountPersona {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Persona", Namespace="http://schemas.datacontract.org/2004/07/WCFServerDB")]
    [System.SerializableAttribute()]
    public partial class Persona : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CAPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cittaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codiceFiscaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cognomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dataDiNascitaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filialeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string indirizzoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string numeroDiTelefonoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string privilegiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string provinciaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sessoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CAP {
            get {
                return this.CAPField;
            }
            set {
                if ((this.CAPField.Equals(value) != true)) {
                    this.CAPField = value;
                    this.RaisePropertyChanged("CAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string citta {
            get {
                return this.cittaField;
            }
            set {
                if ((object.ReferenceEquals(this.cittaField, value) != true)) {
                    this.cittaField = value;
                    this.RaisePropertyChanged("citta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codiceFiscale {
            get {
                return this.codiceFiscaleField;
            }
            set {
                if ((object.ReferenceEquals(this.codiceFiscaleField, value) != true)) {
                    this.codiceFiscaleField = value;
                    this.RaisePropertyChanged("codiceFiscale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cognome {
            get {
                return this.cognomeField;
            }
            set {
                if ((object.ReferenceEquals(this.cognomeField, value) != true)) {
                    this.cognomeField = value;
                    this.RaisePropertyChanged("cognome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dataDiNascita {
            get {
                return this.dataDiNascitaField;
            }
            set {
                if ((this.dataDiNascitaField.Equals(value) != true)) {
                    this.dataDiNascitaField = value;
                    this.RaisePropertyChanged("dataDiNascita");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filiale {
            get {
                return this.filialeField;
            }
            set {
                if ((object.ReferenceEquals(this.filialeField, value) != true)) {
                    this.filialeField = value;
                    this.RaisePropertyChanged("filiale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string indirizzo {
            get {
                return this.indirizzoField;
            }
            set {
                if ((object.ReferenceEquals(this.indirizzoField, value) != true)) {
                    this.indirizzoField = value;
                    this.RaisePropertyChanged("indirizzo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nome {
            get {
                return this.nomeField;
            }
            set {
                if ((object.ReferenceEquals(this.nomeField, value) != true)) {
                    this.nomeField = value;
                    this.RaisePropertyChanged("nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string numeroDiTelefono {
            get {
                return this.numeroDiTelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.numeroDiTelefonoField, value) != true)) {
                    this.numeroDiTelefonoField = value;
                    this.RaisePropertyChanged("numeroDiTelefono");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string privilegi {
            get {
                return this.privilegiField;
            }
            set {
                if ((object.ReferenceEquals(this.privilegiField, value) != true)) {
                    this.privilegiField = value;
                    this.RaisePropertyChanged("privilegi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string provincia {
            get {
                return this.provinciaField;
            }
            set {
                if ((object.ReferenceEquals(this.provinciaField, value) != true)) {
                    this.provinciaField = value;
                    this.RaisePropertyChanged("provincia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sesso {
            get {
                return this.sessoField;
            }
            set {
                if ((object.ReferenceEquals(this.sessoField, value) != true)) {
                    this.sessoField = value;
                    this.RaisePropertyChanged("sesso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stato {
            get {
                return this.statoField;
            }
            set {
                if ((object.ReferenceEquals(this.statoField, value) != true)) {
                    this.statoField = value;
                    this.RaisePropertyChanged("stato");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceAccountPersona.IServiceAccountPersona")]
    public interface IServiceAccountPersona {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/Login", ReplyAction="http://tempuri.org/IServiceAccountPersona/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/Login", ReplyAction="http://tempuri.org/IServiceAccountPersona/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/GetPrivilegi", ReplyAction="http://tempuri.org/IServiceAccountPersona/GetPrivilegiResponse")]
        string GetPrivilegi(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/GetPrivilegi", ReplyAction="http://tempuri.org/IServiceAccountPersona/GetPrivilegiResponse")]
        System.Threading.Tasks.Task<string> GetPrivilegiAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/GetListaPersone", ReplyAction="http://tempuri.org/IServiceAccountPersona/GetListaPersoneResponse")]
        TEST_APP.ServiceReferenceAccountPersona.Persona[] GetListaPersone(string tipoAccount, string idFiliale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/GetListaPersone", ReplyAction="http://tempuri.org/IServiceAccountPersona/GetListaPersoneResponse")]
        System.Threading.Tasks.Task<TEST_APP.ServiceReferenceAccountPersona.Persona[]> GetListaPersoneAsync(string tipoAccount, string idFiliale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/EliminaAccount", ReplyAction="http://tempuri.org/IServiceAccountPersona/EliminaAccountResponse")]
        bool EliminaAccount(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/EliminaAccount", ReplyAction="http://tempuri.org/IServiceAccountPersona/EliminaAccountResponse")]
        System.Threading.Tasks.Task<bool> EliminaAccountAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/CheckUsername", ReplyAction="http://tempuri.org/IServiceAccountPersona/CheckUsernameResponse")]
        TEST_APP.ServiceReferenceAccountPersona.Persona CheckUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/CheckUsername", ReplyAction="http://tempuri.org/IServiceAccountPersona/CheckUsernameResponse")]
        System.Threading.Tasks.Task<TEST_APP.ServiceReferenceAccountPersona.Persona> CheckUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/GetPersona", ReplyAction="http://tempuri.org/IServiceAccountPersona/GetPersonaResponse")]
        TEST_APP.ServiceReferenceAccountPersona.Persona GetPersona(string codiceFiscale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/GetPersona", ReplyAction="http://tempuri.org/IServiceAccountPersona/GetPersonaResponse")]
        System.Threading.Tasks.Task<TEST_APP.ServiceReferenceAccountPersona.Persona> GetPersonaAsync(string codiceFiscale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/AggiungiPersona", ReplyAction="http://tempuri.org/IServiceAccountPersona/AggiungiPersonaResponse")]
        bool AggiungiPersona(TEST_APP.ServiceReferenceAccountPersona.Persona persona, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/AggiungiPersona", ReplyAction="http://tempuri.org/IServiceAccountPersona/AggiungiPersonaResponse")]
        System.Threading.Tasks.Task<bool> AggiungiPersonaAsync(TEST_APP.ServiceReferenceAccountPersona.Persona persona, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/ModificaPersona", ReplyAction="http://tempuri.org/IServiceAccountPersona/ModificaPersonaResponse")]
        bool ModificaPersona(string username, TEST_APP.ServiceReferenceAccountPersona.Persona persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccountPersona/ModificaPersona", ReplyAction="http://tempuri.org/IServiceAccountPersona/ModificaPersonaResponse")]
        System.Threading.Tasks.Task<bool> ModificaPersonaAsync(string username, TEST_APP.ServiceReferenceAccountPersona.Persona persona);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceAccountPersonaChannel : TEST_APP.ServiceReferenceAccountPersona.IServiceAccountPersona, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceAccountPersonaClient : System.ServiceModel.ClientBase<TEST_APP.ServiceReferenceAccountPersona.IServiceAccountPersona>, TEST_APP.ServiceReferenceAccountPersona.IServiceAccountPersona {
        
        public ServiceAccountPersonaClient() {
        }
        
        public ServiceAccountPersonaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceAccountPersonaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAccountPersonaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAccountPersonaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public string GetPrivilegi(string username) {
            return base.Channel.GetPrivilegi(username);
        }
        
        public System.Threading.Tasks.Task<string> GetPrivilegiAsync(string username) {
            return base.Channel.GetPrivilegiAsync(username);
        }
        
        public TEST_APP.ServiceReferenceAccountPersona.Persona[] GetListaPersone(string tipoAccount, string idFiliale) {
            return base.Channel.GetListaPersone(tipoAccount, idFiliale);
        }
        
        public System.Threading.Tasks.Task<TEST_APP.ServiceReferenceAccountPersona.Persona[]> GetListaPersoneAsync(string tipoAccount, string idFiliale) {
            return base.Channel.GetListaPersoneAsync(tipoAccount, idFiliale);
        }
        
        public bool EliminaAccount(string username) {
            return base.Channel.EliminaAccount(username);
        }
        
        public System.Threading.Tasks.Task<bool> EliminaAccountAsync(string username) {
            return base.Channel.EliminaAccountAsync(username);
        }
        
        public TEST_APP.ServiceReferenceAccountPersona.Persona CheckUsername(string username) {
            return base.Channel.CheckUsername(username);
        }
        
        public System.Threading.Tasks.Task<TEST_APP.ServiceReferenceAccountPersona.Persona> CheckUsernameAsync(string username) {
            return base.Channel.CheckUsernameAsync(username);
        }
        
        public TEST_APP.ServiceReferenceAccountPersona.Persona GetPersona(string codiceFiscale) {
            return base.Channel.GetPersona(codiceFiscale);
        }
        
        public System.Threading.Tasks.Task<TEST_APP.ServiceReferenceAccountPersona.Persona> GetPersonaAsync(string codiceFiscale) {
            return base.Channel.GetPersonaAsync(codiceFiscale);
        }
        
        public bool AggiungiPersona(TEST_APP.ServiceReferenceAccountPersona.Persona persona, string password) {
            return base.Channel.AggiungiPersona(persona, password);
        }
        
        public System.Threading.Tasks.Task<bool> AggiungiPersonaAsync(TEST_APP.ServiceReferenceAccountPersona.Persona persona, string password) {
            return base.Channel.AggiungiPersonaAsync(persona, password);
        }
        
        public bool ModificaPersona(string username, TEST_APP.ServiceReferenceAccountPersona.Persona persona) {
            return base.Channel.ModificaPersona(username, persona);
        }
        
        public System.Threading.Tasks.Task<bool> ModificaPersonaAsync(string username, TEST_APP.ServiceReferenceAccountPersona.Persona persona) {
            return base.Channel.ModificaPersonaAsync(username, persona);
        }
    }
}
